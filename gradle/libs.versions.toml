[versions]
agp = "8.2.0"
kotlin = "1.9.20"
compose = "1.5.4"
compose-compiler = "1.5.4"
compose-material3 = "1.1.2"
androidx-activityCompose = "1.8.0"
kotlinxDatetime = "0.4.0"
ktorClientAndroid = "2.3.7"
webview = "0.26.2-beta"
coroutines = "1.6.4"
koin = "3.1.4"
dateTime = "0.3.3"
serilizationCore = "1.3.3"
ktorVersion = "2.3.7"
moko = "0.13.1"
datastore = "1.1.1"
coil = "3.0.0-alpha06"
#Napier log
napier = "2.6.1"
ktor = "2.3.7"
sqlDelight = "2.0.1"
#Koin version
koinCore = "3.5.3"
koinCompose = "1.1.5"
koinComposeViewModel = "1.2.0-Beta4"
koinAndroid = "3.5.3"
koinAndroidxCompose = "3.5.3"
buildKonfig = "0.13.3"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
coil-img = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
ktor-client-android-v237 = { module = "io.ktor:ktor-client-android", version.ref = "ktorClientAndroid" }
webview-lib = { module = "com.google.accompanist:accompanist-webview", version.ref = "webview" }
coroutines-lib = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
koin-lib = { module = "io.insert-koin:koin-core", version.ref = "koin" }
date-Time = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "dateTime" }
serilization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "serilizationCore" }
clientCore = { module = "io.ktor:ktor-client-core", version.ref = "ktorVersion" }
clientJson = { module = "io.ktor:ktor-client-json", version.ref = "ktorVersion" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
clientLogging = { module = "io.ktor:ktor-client-logging", version.ref = "ktorVersion" }
clientSerialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktorVersion" }
contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorVersion" }
json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorVersion" }

clientAndroid = { module = "io.ktor:ktor-client-android", version.ref = "ktorVersion" }

clientIos = { module = "io.ktor:ktor-client-ios", version.ref = "ktorVersion" }

mokoMVVMCore = { module = "dev.icerock.moko:mvvm-core", version.ref = "moko"}

#ktor
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-java = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
ktor-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }

#koin
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koinCore" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koinAndroid" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koinAndroidxCompose" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koinCompose" }
koin-composeViewModel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koinComposeViewModel" }

#Coil
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-compose-core = { module = "io.coil-kt.coil3:coil-compose-core", version.ref = "coil" }
coil-ktor = { module = "io.coil-kt.coil3:coil-network-ktor", version.ref = "coil" }
coil-multiplatform = { module = "io.coil-kt.coil3:coil", version.ref = "coil" }


#SQL_DELIGHT
sqlDelight = { module = "app.cash.sqldelight:runtime", version.ref = "sqlDelight" }
sqlDelight-coroutine = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqlDelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqlDelight-JVM = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
buildKonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildKonfig" }

[bundles]
ktor = ["ktor-core", "ktor-contentNegotiation", "ktor-json", "ktor-logging"]
coil = ["coil-compose-core", "coil-compose", "coil-ktor", "coil-multiplatform"]
